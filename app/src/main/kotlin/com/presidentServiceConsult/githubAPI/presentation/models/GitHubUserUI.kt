package com.presidentServiceConsult.githubAPI.presentation.models

import com.presidentServiceConsult.githubAPI.domain.models.GitHubData
import com.presidentServiceConsult.githubAPI.presentation.foundation.DiffModel

sealed class GitHubDataUI(override val id: Int) : DiffModel<Int> {
    data class GitHubUserUI(
        val login: String,
        override val id: Int,
        val nodeId: String,
        val avatarUrl: String,
        val gravatarId: String,
        val url: String,
        val htmlUrl: String,
        val followersUrl: String,
        val followingUrl: String,
        val gistsUrl: String,
        val starredUrl: String,
        val subscriptionsUrl: String,
        val organizationsUrl: String,
        val reposUrl: String,
        val eventsUrl: String,
        val receivedEventsUrl: String,
        val type: String,
        val siteAdmin: Boolean,
        val score: Double,
    ) : GitHubDataUI(id)

    data class GitHubRepositoryUI(
        override val id: Int,
        val nodeId: String,
        val name: String,
        val fullName: String,
        val owner: GitHubUserUI,
        val isPrivate: Boolean,
        val htmlUrl: String,
        val description: String,
        val fork: Boolean,
        val url: String,
        val createdAt: String,
        val updatedAt: String,
        val pushedAt: String,
        val homepage: String,
        val size: Int,
        val stargazersCount: Int,
        val watchersCount: Int,
        val language: String,
        val forksCount: Int,
        val openIssuesCount: Int,
        val masterBranch: String,
        val defaultBranch: String,
        val permissions: GitHubRepositoryPermissionsUI,
        val score: Double,
        val archiveUrl: String,
        val assigneesUrl: String,
        val blobsUrl: String,
        val branchesUrl: String,
        val collaboratorsUrl: String,
        val commentsUrl: String,
        val commitsUrl: String,
        val compareUrl: String,
        val contentsUrl: String,
        val contributorsUrl: String,
        val deploymentsUrl: String,
        val downloadsUrl: String,
        val eventsUrl: String,
        val forksUrl: String,
        val gitCommitsUrl: String,
        val gitRefsUrl: String,
        val gitTagsUrl: String,
        val gitUrl: String,
        val issueCommentUrl: String,
        val issueEventsUrl: String,
        val issuesUrl: String,
        val keysUrl: String,
        val labelsUrl: String,
        val languagesUrl: String,
        val mergesUrl: String,
        val milestonesUrl: String,
        val notificationsUrl: String,
        val pullsUrl: String,
        val releasesUrl: String,
        val sshUrl: String,
        val stargazersUrl: String,
        val statusesUrl: String,
        val subscribersUrl: String,
        val subscriptionUrl: String,
        val tagsUrl: String,
        val teamsUrl: String,
        val treesUrl: String,
        val cloneUrl: String,
        val mirrorUrl: String,
        val hooksUrl: String,
        val svnUrl: String,
        val forks: Int,
        val openIssues: Int,
        val watchers: Int,
        val hasIssues: Boolean,
        val hasProjects: Boolean,
        val hasPages: Boolean,
        val hasWiki: Boolean,
        val hasDownloads: Boolean,
        val archived: Boolean,
        val disabled: Boolean,
        val visibility: String,
        val license: GitHubRepositoryLicenseUI
    ) : GitHubDataUI(id)

}

inline val GitHubData.GitHubUserModel.ui
    get() = GitHubDataUI.GitHubUserUI(
        login,
        id,
        nodeId,
        avatarUrl,
        gravatarId,
        url,
        htmlUrl,
        followersUrl,
        followingUrl,
        gistsUrl,
        starredUrl,
        subscriptionsUrl,
        organizationsUrl,
        reposUrl,
        eventsUrl,
        receivedEventsUrl,
        type,
        siteAdmin,
        score,
    )

inline val GitHubData.GitHubRepositoryModel.ui
    get() = GitHubDataUI.GitHubRepositoryUI(
        id,
        nodeId,
        name,
        fullName,
        owner.ui,
        isPrivate,
        htmlUrl,
        description,
        fork,
        url,
        createdAt,
        updatedAt,
        pushedAt,
        homepage,
        size,
        stargazersCount,
        watchersCount,
        language,
        forksCount,
        openIssuesCount,
        masterBranch,
        defaultBranch,
        permissions.ui,
        score,
        archiveUrl,
        assigneesUrl,
        blobsUrl,
        branchesUrl,
        collaboratorsUrl,
        commentsUrl,
        commitsUrl,
        compareUrl,
        contentsUrl,
        contributorsUrl,
        deploymentsUrl,
        downloadsUrl,
        eventsUrl,
        forksUrl,
        gitCommitsUrl,
        gitRefsUrl,
        gitTagsUrl,
        gitUrl,
        issueCommentUrl,
        issueEventsUrl,
        issuesUrl,
        keysUrl,
        labelsUrl,
        languagesUrl,
        mergesUrl,
        milestonesUrl,
        notificationsUrl,
        pullsUrl,
        releasesUrl,
        sshUrl,
        stargazersUrl,
        statusesUrl,
        subscribersUrl,
        subscriptionUrl,
        tagsUrl,
        teamsUrl,
        treesUrl,
        cloneUrl,
        mirrorUrl,
        hooksUrl,
        svnUrl,
        forks,
        openIssues,
        watchers,
        hasIssues,
        hasProjects,
        hasPages,
        hasWiki,
        hasDownloads,
        archived,
        disabled,
        visibility,
        license.ui
    )